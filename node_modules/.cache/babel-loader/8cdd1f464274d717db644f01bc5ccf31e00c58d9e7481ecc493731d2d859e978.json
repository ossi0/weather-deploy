{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ossi Laurila\\\\Desktop\\\\weatherapp\\\\src\\\\components\\\\searchbar.jsx\";\nimport React, { Component } from \"react\";\nimport { returnStations, showData, showSnow } from \"../index\";\nimport Metolib from \"@fmidev/metolib\";\nclass Searchbar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDropdownVisibility = state => {\n      this.setState({\n        visible: state === 0 ? false : true\n      });\n    };\n    this.handleDropdownSearch = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n    // Tekee datapyynnön fmi:ltä ja kutsuu datankäsittelijäfunktion showData (index.js)\n    this.handleOptionClick = (id, option) => {\n      console.log(option);\n      // Määritellään ensiksi tämänhetkinen aika (dt) sekä aika vuosi sitten (dtstart)\n      var dt = new Date();\n      var dtstart = new Date(new Date().getFullYear() - 1, new Date().getMonth(), new Date().getDate());\n      var dtsnowstart = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 30);\n      var parser = new Metolib.WfsRequestParser();\n      var SERVER_URL = \"http://opendata.fmi.fi/wfs\";\n      var STORED_QUERY_OBSERVATION = \"fmi::observations::weather::daily::multipointcoverage\";\n      if (option === 1) {\n        parser.getData({\n          url: SERVER_URL,\n          storedQueryId: STORED_QUERY_OBSERVATION,\n          requestParameter: \"tmin,tmax\",\n          begin: new Date(dtstart).getTime(),\n          end: new Date(dt).getTime(),\n          fmisid: id,\n          callback: function (data, errors) {\n            console.log(data);\n            showData(data);\n            if (errors) {\n              // Miten tämä toimii??\n              console.log(\"Virhe\");\n            }\n          }\n        });\n      }\n      if (option === 4) {\n        console.log(\"lumensyvyyden kuvaaja\");\n        parser.getData({\n          url: SERVER_URL,\n          storedQueryId: STORED_QUERY_OBSERVATION,\n          requestParameter: \"snow\",\n          begin: new Date(dtsnowstart).getTime(),\n          end: new Date(dt).getTime(),\n          fmisid: id,\n          callback: function (data, errors) {\n            console.log(data.locations[0].data.snow.timeValuePairs.length);\n            if (data.locations.length > 0) {\n              showSnow(data);\n            } else {\n              alert(\"Asemalta ei saatu tietoja. Kokeile toista asemaa\");\n            }\n          }\n        });\n      }\n    };\n    this.state = {\n      visible: false,\n      value: \"\"\n    };\n    this.handleDropdownSearch = this.handleDropdownSearch.bind(this);\n  }\n  render() {\n    const option = (name, key) => /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      // href: key,\n      key: key,\n      onMouseDown: () => {\n        // 4 = lumensyvyys, 1 = lämpötilakuvaaja\n        if (window.location.pathname === \"/lumensyvyys\") {\n          this.handleOptionClick(key, 4);\n        }\n        if (window.location.pathname === \"/kuvaaja\" || \"/\") {\n          this.handleOptionClick(key, 1);\n        }\n      }\n    }, name);\n    const fetchOptions = () => {\n      var optionlist = [];\n      returnStations(this.state.value).forEach((value, index) => {\n        optionlist.push(option(value[0], value[1]));\n      });\n      return optionlist;\n    };\n    const dropdownVisibleClass = \"dropdown-content\";\n    const dropdownHiddenClass = \"dropdown-content hidden\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"search\",\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header justify-content-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, \"Valitse haluamasi mittausasema havaintohistoriaa varten\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body justify-content-center\",\n      onFocus: () => this.handleDropdownVisibility(1),\n      onBlur: () => this.handleDropdownVisibility(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      placeholder: \"Hae...\",\n      id: \"dropdowninput\",\n      onChange: this.handleDropdownSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dropdownbox\",\n      className: this.state.visible === true ? dropdownVisibleClass : dropdownHiddenClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, fetchOptions()))));\n  }\n}\nexport default Searchbar;","map":{"version":3,"names":["React","Component","returnStations","showData","showSnow","Metolib","Searchbar","constructor","props","handleDropdownVisibility","state","setState","visible","handleDropdownSearch","event","value","target","handleOptionClick","id","option","console","log","dt","Date","dtstart","getFullYear","getMonth","getDate","dtsnowstart","parser","WfsRequestParser","SERVER_URL","STORED_QUERY_OBSERVATION","getData","url","storedQueryId","requestParameter","begin","getTime","end","fmisid","callback","data","errors","locations","snow","timeValuePairs","length","alert","bind","render","name","key","createElement","style","cursor","onMouseDown","window","location","pathname","fetchOptions","optionlist","forEach","index","push","dropdownVisibleClass","dropdownHiddenClass","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onFocus","onBlur","type","placeholder","onChange"],"sources":["C:/Users/Ossi Laurila/Desktop/weatherapp/src/components/searchbar.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { returnStations, showData, showSnow } from \"../index\";\r\nimport Metolib from \"@fmidev/metolib\";\r\n\r\nclass Searchbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      value: \"\",\r\n    };\r\n\r\n    this.handleDropdownSearch = this.handleDropdownSearch.bind(this);\r\n  }\r\n\r\n  handleDropdownVisibility = (state) => {\r\n    this.setState({ visible: state === 0 ? false : true });\r\n  };\r\n  handleDropdownSearch = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n  // Tekee datapyynnön fmi:ltä ja kutsuu datankäsittelijäfunktion showData (index.js)\r\n  handleOptionClick = (id, option) => {\r\n    console.log(option);\r\n    // Määritellään ensiksi tämänhetkinen aika (dt) sekä aika vuosi sitten (dtstart)\r\n    var dt = new Date();\r\n    var dtstart = new Date(\r\n      new Date().getFullYear() - 1,\r\n      new Date().getMonth(),\r\n      new Date().getDate()\r\n    );\r\n    var dtsnowstart = new Date(\r\n      new Date().getFullYear(),\r\n      new Date().getMonth(),\r\n      new Date().getDate() - 30\r\n    );\r\n\r\n    var parser = new Metolib.WfsRequestParser();\r\n    var SERVER_URL = \"http://opendata.fmi.fi/wfs\";\r\n    var STORED_QUERY_OBSERVATION =\r\n      \"fmi::observations::weather::daily::multipointcoverage\";\r\n    if (option === 1) {\r\n      parser.getData({\r\n        url: SERVER_URL,\r\n        storedQueryId: STORED_QUERY_OBSERVATION,\r\n        requestParameter: \"tmin,tmax\",\r\n        begin: new Date(dtstart).getTime(),\r\n        end: new Date(dt).getTime(),\r\n        fmisid: id,\r\n        callback: function (data, errors) {\r\n          console.log(data);\r\n          showData(data);\r\n          if (errors) {\r\n            // Miten tämä toimii??\r\n            console.log(\"Virhe\");\r\n          }\r\n        },\r\n      });\r\n    }\r\n    if (option === 4) {\r\n      console.log(\"lumensyvyyden kuvaaja\");\r\n      parser.getData({\r\n        url: SERVER_URL,\r\n        storedQueryId: STORED_QUERY_OBSERVATION,\r\n        requestParameter: \"snow\",\r\n        begin: new Date(dtsnowstart).getTime(),\r\n        end: new Date(dt).getTime(),\r\n        fmisid: id,\r\n        callback: function (data, errors) {\r\n          console.log(data.locations[0].data.snow.timeValuePairs.length);\r\n          if (data.locations.length > 0) {\r\n            showSnow(data);\r\n          } else {\r\n            alert(\"Asemalta ei saatu tietoja. Kokeile toista asemaa\");\r\n          }\r\n\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const option = (name, key) =>\r\n      React.createElement(\r\n        \"a\",\r\n        {\r\n          style: {\r\n            cursor: \"pointer\",\r\n          },\r\n          // href: key,\r\n          key: key,\r\n          onMouseDown: () => {\r\n            // 4 = lumensyvyys, 1 = lämpötilakuvaaja\r\n            if (window.location.pathname === \"/lumensyvyys\") {\r\n              this.handleOptionClick(key, 4);\r\n            }\r\n            if (window.location.pathname === \"/kuvaaja\" || \"/\") {\r\n              this.handleOptionClick(key, 1);\r\n            }\r\n          },\r\n        },\r\n        name\r\n      );\r\n    const fetchOptions = () => {\r\n      var optionlist = [];\r\n      returnStations(this.state.value).forEach((value, index) => {\r\n        optionlist.push(option(value[0], value[1]));\r\n      });\r\n      return optionlist;\r\n    };\r\n    const dropdownVisibleClass = \"dropdown-content\";\r\n    const dropdownHiddenClass = \"dropdown-content hidden\";\r\n    return (\r\n      <div id=\"search\" className=\"card\">\r\n        <div className=\"card-header justify-content-center \">\r\n          Valitse haluamasi mittausasema havaintohistoriaa varten\r\n        </div>\r\n        <div\r\n          className=\"card-body justify-content-center\"\r\n          onFocus={() => this.handleDropdownVisibility(1)}\r\n          onBlur={() => this.handleDropdownVisibility(0)}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.value}\r\n            placeholder=\"Hae...\"\r\n            id=\"dropdowninput\"\r\n            onChange={this.handleDropdownSearch}\r\n          />\r\n          <div className=\"dropdown\">\r\n            <div\r\n              id=\"dropdownbox\"\r\n              className={\r\n                this.state.visible === true\r\n                  ? dropdownVisibleClass\r\n                  : dropdownHiddenClass\r\n              }\r\n            >\r\n              {fetchOptions()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}